#!/usr/bin/env python2.5

import sys
import getopt
import time
import sflowtoolkit

# Arguments from the command line (with defaults)
index	= "-1"
agent	= ""
start	= ""
end	= ""
format	= "flow"
type	= "binary"

def usage():
	print "Usage information: stexport -a <agent ip> -s <start> -e <end> [-i <if index>] [-f <format>] [-t <type>]"

def do_work():
	global format, type
	datadir = sflowtoolkit.sflowconfig["data directory"]
	output_function = getattr(sflowtoolkit, "get_%sdata_%s" % (type, format))
	output_function(agent, start, end, datadir, index)

def check_parameters():
	result = True
	if not agent:
		result = False
	if not start:
		result = False
	if not end:
		result = False
	return result

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:], "hi:a:s:e:f:t:", ["help", "index=", "agent=", "start=", "end=", "format=", "type="])
	except getopt.GetoptError, err:
		print str(err)
		usage()
		sys.exit(2)
	global agent, index, start, end, format, type
	for o,a in opts:
		if o == "-h":
			help()
			sys.exit(0)
		elif o in ["-i", "--index"]:
			index = a
		elif o in ["-a", "--agent"]:
			agent = a
		elif o in ["-s", "--start"]:
			start = a
		elif o in ["-e", "--end"]:
			end = a
		elif o in ["-f", "--format"]:
			format = a
		elif o in ["-t", "--type"]:
			type = a
		else:
			assert False, "unhandled option"
	# We are done parsing options, time to do some work
	if not check_parameters():
		usage()
		sys.exit(2)
	do_work()
	
if __name__ == "__main__":
	main()
