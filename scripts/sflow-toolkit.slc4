#!/bin/sh
#
# chkconfig: 2345 56 01
# description: Starts and stops the sFlow collector daemon
#
# pidfile: /var/run/$DAEMON.pid
# config:  /etc/$DAEMON.conf

DAEMON_HOME=/usr/local/bin

DAEMONCOLLECT=stcollectd
ARGSCOLLECT="-vvv"
SERVICECOLLECT="sFlow collecting"

DAEMONPROCESS=stprocessd
ARGSPROCESS="-vvv"
SERVICEPROCESS="sFlow processing"

DAEMONXML=stxmlrpcd
ARGSXML=""
SERVICEXML="sFlow XMLRPC"

# Source function library.
if [ -f /etc/init.d/functions ] ; then
  . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
  . /etc/rc.d/init.d/functions
else
  exit 1
fi

# Avoid using root's TMPDIR
unset TMPDIR

[ -f /etc/$DAEMONCOLLECT.conf ] || exit 6

RETVALCOLLECT=0
RETVALPROCESS=0
RETVALXML=0

start() {
	echo -n $"Starting $SERVICECOLLECT services: "
	daemon $DAEMON_HOME/$DAEMONCOLLECT $ARGSCOLLECT
	RETVALCOLLECT=$?
	echo
	[ $RETVALCOLLECT -eq 0 ] && touch /var/lock/subsys/$DAEMONCOLLECT || RETVALCOLLECT=1

	echo -n $"Starting $SERVICEPROCESS services: "
	daemon $DAEMON_HOME/$DAEMONPROCESS $ARGSPROCESS
	RETVALPROCESS=$?
	echo
	[ $RETVALPROCESS -eq 0 ] && touch /var/lock/subsys/$DAEMONPROCESS || RETVALPROCESS=1

	echo -n $"Starting $SERVICEXML services: "
	daemon /usr/local/bin/$DAEMONXML $ARGSXML
	RETVALXML=$?
	echo
	[ $RETVALXML -eq 0 ] && touch /var/lock/subsys/$DAEMONXML || RETVALXML=1

	if [ $RETVALCOLLECT -eq 0 ] && [ $RETVALPROCESS -eq 0 ] && [ $RETVALXML -eq 0 ]
	then
		return 0
	else
		return 1
	fi
}	

stop() {
	echo -n $"Shutting down $SERVICECOLLECT services: "
	killproc $DAEMONCOLLECT
	RETVALCOLLECT=$?
	echo
	[ $RETVALCOLLECT -eq 0 ] && rm -f /var/lock/subsys/$DAEMONCOLLECT

	echo -n $"Shutting down $SERVICEPROCESS services: "
	killproc $DAEMONPROCESS
	RETVALPROCESS=$?
	echo
	[ $RETVALPROCESS -eq 0 ] && rm -f /var/lock/subsys/$DAEMONPROCESS

	echo -n $"Shutting down $SERVICEXML services: "
	killproc $DAEMONXML
	RETVALXML=$?
	echo
	[ $RETVALXML -eq 0 ] && rm -f /var/lock/subsys/$DAEMONXML

	if [ $RETVALCOLLECT -eq 0 ] && [ $RETVALPROCESS -eq 0 ] && [ $RETVALXML -eq 0 ]
	then
		return 0
	else
		return 1
	fi
}	

restart() {
	stop
	start
}	

rhstatus() {
	status $DAEMONCOLLECT
	RETVALCOLLECT=$?
	status $DAEMONPROCESS
	RETVALPROCESS=$?

	# Handle this ourselves since something obviously doesnt like python daemons
	if [ -f /var/run/$DAEMONXML.pid -a -f /var/lock/subsys/$DAEMONXML ] ; then
		read pid < /var/run/$DAEMONXML.pid
		echo "$DAEMONXML (pid $pid) is running..."
	else
		echo "$DAEMONXML is stopped"
	fi
	RETVALXML=$?

	if [ $RETVALCOLLECT -eq 0 ] && [ $RETVALPROCESS -eq 0 ] && [ $RETVALXML -eq 0 ]
	then
		return 0
	else
		return 1
	fi
}	

# Allow status as non-root.
if [ "$1" = status ]; then
       rhstatus
       exit $?
fi

case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
  	restart
	;;
  status)
  	rhstatus
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|status}"
	exit 2
esac

exit $?
